"use strict";(self.webpackChunkarmeria_site=self.webpackChunkarmeria_site||[]).push([[690],{53685:function(e,t,r){r.r(t),r.d(t,{_frontmatter:function(){return p},default:function(){return d},pageTitle:function(){return s}});var a,i=r(63366),n=(r(67294),r(64983)),o=r(89791),l=["components"],s="Defining service methods",p={},c=(a="TutorialSteps",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)}),h={pageTitle:s,_frontmatter:p},m=o.Z;function d(e){var t=e.components,r=(0,i.Z)(e,l);return(0,n.kt)(m,Object.assign({},h,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"defining-service-methods",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h1",href:"#defining-service-methods","aria-label":"defining service methods permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Defining service methods"),(0,n.kt)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#what-you-need"},"What you need")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#1-write-the-thrift-file"},"1. Write the thrift file")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#2-compile-the-thrift-file"},"2. Compile the thrift file")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#3-override-service-methods"},"3. Override service methods")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#whats-next"},"What's next"))),(0,n.kt)("p",null,"Previously, we ran a service on a server and also confirmed that our client could make a call to the service.\nIn this step, we'll define service methods and other components including objects and an exception type.\nWe'll leave the service methods empty for now to implement one by one in later steps of this tutorial."),(0,n.kt)(c,{current:3,mdxType:"TutorialSteps"}),(0,n.kt)("h2",{id:"what-you-need",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h2",href:"#what-you-need","aria-label":"what you need permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"What you need"),(0,n.kt)("p",null,"You need to have the files obtained from previous steps:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"blog.thrift")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"BlogServiceImpl.java")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"BlogClient.java"))),(0,n.kt)("h2",{id:"1-write-the-thrift-file",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h2",href:"#1-write-the-thrift-file","aria-label":"1 write the thrift file permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"1. Write the thrift file"),(0,n.kt)("p",null,"Let's update the ",(0,n.kt)("inlineCode",{parentName:"p"},"blog.thrift")," file we created earlier in ",(0,n.kt)("a",{parentName:"p",href:"/tutorials/thrift/blog/create-service"},"Step 1. Create a service"),".\nWe'll add structs, an exception, and service methods.\nYou can see the full version of the file ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/line/armeria-examples/blob/main/tutorials/thrift/src/main/thrift/blog.thrift"},"here"),"."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add the ",(0,n.kt)("inlineCode",{parentName:"p"},"BlogPost")," struct."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"filename=blog.thrift",filename:"blog.thrift"},"struct BlogPost {\n  1: i32 id;\n  2: string title;\n  3: string content;\n  4: i64 createdAt;\n  5: i64 modifiedAt;\n}\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add structs for request and response objects as follows."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"filename=blog.thrift",filename:"blog.thrift"},"struct CreateBlogPostRequest {\n  1: string title;\n  2: string content;\n}\n\nstruct GetBlogPostRequest {\n  1: i32 id;\n}\n\nstruct ListBlogPostsRequest {\n  1: bool descending;\n}\n\nstruct ListBlogPostsResponse {\n  1: list<BlogPost> blogs;\n}\n\nstruct UpdateBlogPostRequest {\n  1: i32 id;\n  2: string title;\n  3: string content;\n}\n\nstruct DeleteBlogPostRequest {\n  1: i32 id;\n}\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add the ",(0,n.kt)("inlineCode",{parentName:"p"},"BlogNotFoundException"),"."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"filename=blog.thrift",filename:"blog.thrift"},"exception BlogNotFoundException {\n  1: string reason\n}\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add service methods for create, read, update, and delete operations."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"filename=blog.thrift",filename:"blog.thrift"},"service BlogService {\n  ...\n\n  BlogPost createBlogPost(1:CreateBlogPostRequest request),\n\n  BlogPost getBlogPost(1:GetBlogPostRequest request) throws (1:BlogNotFoundException e),\n\n  ListBlogPostsResponse listBlogPosts(1:ListBlogPostsRequest request),\n\n  BlogPost updateBlogPost(1:UpdateBlogPostRequest request) throws (1:BlogNotFoundException e),\n\n  void deleteBlogPost(1:DeleteBlogPostRequest request) throws (1:BlogNotFoundException e),\n}\n")))),(0,n.kt)("h2",{id:"2-compile-the-thrift-file",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h2",href:"#2-compile-the-thrift-file","aria-label":"2 compile the thrift file permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"2. Compile the thrift file"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/tutorials/thrift/blog/create-service#2-compile-the-thrift-file"},"Compile the thrift file")," to generate Java code."),(0,n.kt)("p",null,"After compiling, you may encounter a warning in your IDE, because we updated only the service interface in Thrift, but not yet the implementation in Java.\nThe warning will be resolved soon in the step below."),(0,n.kt)("h2",{id:"3-override-service-methods",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h2",href:"#3-override-service-methods","aria-label":"3 override service methods permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"3. Override service methods"),(0,n.kt)("p",null,"Let's override the service methods by adding empty service methods as follows.\nWe'll implement the service methods one by one in this tutorial.\nLet's leave them empty for now."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogServiceImpl.java",filename:"BlogServiceImpl.java"},"import example.armeria.blog.thrift.BlogPost;\nimport example.armeria.blog.thrift.CreateBlogPostRequest;\nimport example.armeria.blog.thrift.GetBlogPostRequest;\nimport example.armeria.blog.thrift.ListBlogPostsRequest;\nimport example.armeria.blog.thrift.ListBlogPostsResponse;\nimport example.armeria.blog.thrift.UpdateBlogPostRequest;\nimport example.armeria.blog.thrift.DeleteBlogPostRequest;\nimport org.apache.thrift.TException;\n\npublic class BlogServiceImpl implements BlogService.AsyncIface {\n  ...\n\n  @Override\n  public void createBlogPost(CreateBlogPostRequest request, AsyncMethodCallback<BlogPost> resultHandler)\n          throws TException {}\n\n  @Override\n  public void getBlogPost(GetBlogPostRequest request, AsyncMethodCallback<BlogPost> resultHandler)\n          throws TException {}\n\n  @Override\n  public void listBlogPosts(ListBlogPostsRequest request, AsyncMethodCallback<ListBlogPostsResponse> resultHandler)\n          throws TException {}\n\n  @Override\n  public void updateBlogPost(UpdateBlogPostRequest request, AsyncMethodCallback<BlogPost> resultHandler)\n          throws TException {}\n\n  @Override\n  public void deleteBlogPost(DeleteBlogPostRequest request, AsyncMethodCallback<Void> resultHandler)\n          throws TException {}\n}\n")),(0,n.kt)("h2",{id:"whats-next",style:{position:"relative"}},(0,n.kt)("a",{parentName:"h2",href:"#whats-next","aria-label":"whats next permalink",className:"anchor before"},(0,n.kt)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"What's next"),(0,n.kt)("p",null,"In this step, we've defined empty service methods to implement from now on."),(0,n.kt)("p",null,"Next at ",(0,n.kt)("a",{parentName:"p",href:"/tutorials/thrift/blog/implement-create"},"Step 4. Implement CREATE"),", we'll implement a CREATE operation to create a blog post."),(0,n.kt)(c,{current:3,mdxType:"TutorialSteps"}))}d.isMDXComponent=!0},89791:function(e,t,r){r.d(t,{Z:function(){return l}});var a=r(25444),i=r(67294),n=JSON.parse('{"root":["index"],"Useful links":{"User manual":"/docs","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"REST service":["rest/blog","rest/blog/create-server","rest/blog/prepare-data-object","rest/blog/add-services-to-server","rest/blog/implement-create","rest/blog/implement-read","rest/blog/implement-update","rest/blog/implement-delete"],"gRPC service":["grpc/blog","grpc/blog/define-service","grpc/blog/run-service","grpc/blog/implement-create","grpc/blog/implement-read","grpc/blog/implement-update","grpc/blog/implement-delete","grpc/blog/add-docservice"],"Thrift service":["thrift/blog","thrift/blog/create-service","thrift/blog/run-server","thrift/blog/define-service-methods","thrift/blog/implement-create","thrift/blog/implement-read","thrift/blog/implement-update","thrift/blog/implement-delete"]}'),o=r(46731),l=function(e){var t=(0,a.useStaticQuery)("3172452987").allMdx.nodes;return i.createElement(o.Z,Object.assign({},e,{candidateMdxNodes:t,index:n,prefix:"tutorials",menuTitle:!0,pageTitleSuffix:"Armeria tutorial"}))}}}]);
//# sourceMappingURL=component---src-pages-tutorials-thrift-blog-define-service-methods-mdx-3f5351d7b6fbd1b4b177.js.map